None
[INFO] users- Users DB in localhost
[INFO] loginnedUsers- Setting logined users
[DEBUG] users- Getting all users
None
[INFO] Notifications DB in localhost
None
[INFO] serverAuth-SharedServer found in localhost
[INFO] http://localhost:10010
None
[INFO] userLogin: Shared Server found in localhost
None
[INFO] friends- Friends DB in localhost
None
[INFO] invitations- Invitations DB in localhost
None
[INFO] notifications- Notifications DB in localhost
None
[INFO] stories- Stories DB in localhost
None
[INFO] Comments DB in localhost
None
[INFO] flashStories - FlashStories DB found in localhost
[INFO] flashStories- TEST_ENV found in os.environ
[DEBUG] usersSignUpController- Authenticating sign up for new user: user
[INFO] Mocking user signup
[INFO] Mocking user signup
[INFO] Mocking new user
{"id": 1, "_rev": null, "applicationOwner": "String", "username": "user"}
[DEBUG] usersSignUpController- New user registered in DB
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersSignUpController- {'firstname': None, 'lastname': None, 'gender': None, 'age': None, 'birthday': None}
[DEBUG] Adding new user: user
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
<Response streamed [200 OK]>
[DEBUG] usersSignUpController- Authenticating sign up for new user: user2
[INFO] Mocking user signup
[INFO] Mocking user signup
[ERROR] [MOCK01] MOCK: Signup parameters missing
{"message": "Parametros de signup faltantes"}
[DEBUG] usersSignUpController- Error while registering user:{'message': 'Parametros de signup faltantes'}
[ERROR] [API01] [userSignUpController.authenticateSignUp]Error at sign up. Response message received: Parametros de signup faltantes
[DEBUG] usersSignUpController- Authenticating sign up for new user: user2
[INFO] Mocking user signup
[INFO] Mocking user signup
[INFO] Mocking new user
{"id": 2, "_rev": null, "applicationOwner": "String", "username": "user2"}
[DEBUG] usersSignUpController- New user registered in DB
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersSignUpController- {'firstname': None, 'lastname': None, 'gender': None, 'age': None, 'birthday': None}
[DEBUG] Adding new user: user2
[DEBUG] loginnedUsers- User login: user2, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user2
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user2
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user2, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user fakeuser
[INFO] User login mockup
[ERROR] [MOCK03] MOCK: Incorrect login information
[DEBUG] usersLoginController- LoginController - response status:401
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[ERROR] [MOCK03] MOCK: Incorrect login information
[DEBUG] usersLoginController- LoginController - response status:401
[DEBUG] usersSignUpController- Authenticating sign up for new user: user3
[INFO] Mocking user signup
[INFO] Mocking user signup
[INFO] Mocking new user
{"id": 3, "_rev": null, "applicationOwner": "String", "username": "user3"}
[DEBUG] usersSignUpController- New user registered in DB
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersSignUpController- {'firstname': None, 'lastname': None, 'gender': None, 'age': None, 'birthday': None}
[DEBUG] Adding new user: user3
[DEBUG] loginnedUsers- User login: user3, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user3
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user3
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user3, token: eTKhUrPGek
eTKhUrPGek
[DEBUG] usersSignUpController- Authenticating sign up for new user: userProfile
[INFO] Mocking user signup
[INFO] Mocking user signup
[INFO] Mocking new user
{"id": 4, "_rev": null, "applicationOwner": "String", "username": "userProfile"}
[DEBUG] usersSignUpController- New user registered in DB
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersSignUpController- {'firstname': None, 'lastname': None, 'gender': None, 'age': None, 'birthday': None}
[DEBUG] Adding new user: userProfile
[DEBUG] loginnedUsers- User login: userProfile, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user userProfile
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userProfile
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userProfile, token: eTKhUrPGek
[DEBUG] users-Checking userProfile login
[DEBUG] profilesController- Updating userProfile profile
[DEBUG] users-Updating userProfile profile
None
<Response 5 bytes [200 OK]>
[DEBUG] users-Checking userProfile login
[DEBUG] profilesController- Getting userProfile profile
[DEBUG] users-Getting userProfile profile
[DEBUG] usersLoginController- Validating login for user userProfile
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userProfile
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userProfile, token: eTKhUrPGek
[DEBUG] users-Checking userProfile login
[DEBUG] profilesController- Updating userProfile profile
[DEBUG] users-Updating userProfile profile
[DEBUG] users-Checking userProfile login
[DEBUG] profilesController- Getting userProfile profile
[DEBUG] users-Getting userProfile profile
[DEBUG] usersSignUpController- Authenticating sign up for new user: userProfile2
[INFO] Mocking user signup
[INFO] Mocking user signup
[INFO] Mocking new user
{"id": 5, "_rev": null, "applicationOwner": "String", "username": "userProfile2"}
[DEBUG] usersSignUpController- New user registered in DB
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersSignUpController- {'firstname': None, 'lastname': None, 'gender': None, 'age': None, 'birthday': None}
[DEBUG] Adding new user: userProfile2
[DEBUG] loginnedUsers- User login: userProfile2, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user userProfile2
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userProfile2
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userProfile2, token: eTKhUrPGek
[DEBUG] users-Checking userProfile login
[DEBUG] profilesController- Updating userProfile2 profile
[DEBUG] users-Updating userProfile2 profile
[DEBUG] users-Checking userProfile login
[DEBUG] profilesController- Getting userProfile2 profile
[DEBUG] users-Getting userProfile2 profile
[DEBUG] usersSignUpController- Authenticating sign up for new user: userFriends
[INFO] Mocking user signup
[INFO] Mocking user signup
[INFO] Mocking new user
{"id": 6, "_rev": null, "applicationOwner": "String", "username": "userFriends"}
[DEBUG] usersSignUpController- New user registered in DB
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersSignUpController- {'firstname': None, 'lastname': None, 'gender': None, 'age': None, 'birthday': None}
[DEBUG] Adding new user: userFriends
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Getting userFriends friend list
[DEBUG] friends- Getting userFriends friend list
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Adding user to userFriends friend list
[DEBUG] friends- userFriends adding user to friends list
[DEBUG] friends- user adding userFriends to friends list
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Getting userFriends friend list
[DEBUG] friends- Getting userFriends friend list
['user']
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Getting userFriends friend list
[DEBUG] friends- Getting userFriends friend list
['user']
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Removing user from userFriends friend list
[DEBUG] friends- userFriends deleting user from friends list
Okey
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Adding user to userFriends friend list
[DEBUG] friends- userFriends adding user to friends list
[DEBUG] friends- user adding userFriends to friends list
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Getting user friend list
[DEBUG] friends- Getting user friend list
['userFriends']
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] invitationsController- Retrieving invitations for user userFriends
[DEBUG] invitations- Getting user userFriends invitations
[ERROR] [API07] [invitationsController.getUserInvitations]No invitations found for user userFriends
b'{"Error": "Aun no tiene invitaciones (Error code: 7)"}\n'
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] invitationsController- userFriends adding user to friend list
[DEBUG] invitations- Adding friend invitation
Okey 



[DEBUG] users-Checking user login
[DEBUG] invitationsController- Retrieving invitations for user user
[DEBUG] invitations- Getting user user invitations
['userFriends'] 



[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] invitationsController- userFriends adding user to friend list
[DEBUG] invitations- Adding friend invitation
[DEBUG] users-Checking user login
[DEBUG] invitationsController- Retrieving invitations for user user
[DEBUG] invitations- Getting user user invitations
[DEBUG] users-Checking user login
ACCEPT INVITATIONSSSS
[DEBUG] invitationsController- user accepting userFriends friend request
[DEBUG] invitations- Accepting friend invitation: user|userFriends
[DEBUG] friends- user adding userFriends to friends list
[DEBUG] friends- userFriends adding user to friends list
[DEBUG] users-Checking userFriends login
[DEBUG] friendsController- Getting userFriends friend list
[DEBUG] friends- Getting userFriends friend list
['user']
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] usersLoginController- Validating login for user user2
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user2
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user2, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] invitationsController- userFriends adding user to friend list
[DEBUG] invitations- Adding friend invitation
Okey 



[DEBUG] users-Checking user2 login
[DEBUG] invitationsController- user2 adding user to friend list
[DEBUG] invitations- Adding friend invitation


userINVITATIONS ['userFriends', 'user2']
Okey 



[DEBUG] users-Checking user login
[DEBUG] invitationsController- Retrieving invitations for user user
[DEBUG] invitations- Getting user user invitations
['userFriends', 'user2'] 



[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story 1ed1f548-4eeb-43ff-8695-c2535a7f7709
{'storyId': '1ed1f548-4eeb-43ff-8695-c2535a7f7709'}
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Retrieving homepage feed for user
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting user friend list
Historiass:
 {'feedStories': [{'_id': '1ed1f548-4eeb-43ff-8695-c2535a7f7709', 'username': 'user', 'storyDetail': {'description': 'Esto es una historia', 'title': None, 'state': 'Public', 'url': 'https://img.buzzfeed.com/buzzfeed-static/static/2016-11/9/10/asset/buzzfeed-prod-fastlane03/sub-buzz-6237-1478707084-5.jpg?downsize=715:*&output-format=auto&output-quality=auto'}, 'createdAt': '2018-06-09 18:52:44.606359', 'updatedAt': '2018-06-09 18:52:44.606370', 'reactions': {}}]}
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] storiesController- Retrieving homepage feed for userFriends
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting userFriends friend list
Historias:
 {'feedStories': [{'_id': '1ed1f548-4eeb-43ff-8695-c2535a7f7709', 'username': 'user', 'storyDetail': {'description': 'Esto es una historia', 'title': None, 'state': 'Public', 'url': 'https://img.buzzfeed.com/buzzfeed-static/static/2016-11/9/10/asset/buzzfeed-prod-fastlane03/sub-buzz-6237-1478707084-5.jpg?downsize=715:*&output-format=auto&output-quality=auto'}, 'createdAt': '2018-06-09 18:52:44.606359', 'updatedAt': '2018-06-09 18:52:44.606370', 'reactions': {}}]}
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Retrieving homepage feed for user
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting user friend list
[DEBUG] users-Checking user login
[DEBUG] storiesController- Updating story 1ed1f548-4eeb-43ff-8695-c2535a7f7709
[DEBUG] stories- Updating story 1ed1f548-4eeb-43ff-8695-c2535a7f7709 for user user
[DEBUG] users-Checking user login
[DEBUG] storiesController- Retrieving homepage feed for user
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting user friend list
{'feedStories': [{'_id': '1ed1f548-4eeb-43ff-8695-c2535a7f7709', 'username': 'user', 'storyDetail': {'description': 'Nueva descripcion', 'title': None, 'state': 'Public', 'url': 'https://img.buzzfeed.com/buzzfeed-static/static/2016-11/9/10/asset/buzzfeed-prod-fastlane03/sub-buzz-6237-1478707084-5.jpg?downsize=715:*&output-format=auto&output-quality=auto'}, 'createdAt': '2018-06-09 18:52:44.606359', 'updatedAt': '2018-06-09 18:52:44.716613', 'reactions': {}}]}
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] storiesController- Adding story for user userFriends
[DEBUG] stories- Adding new story for user userFriends
[DEBUG] comments- Adding comment to story 5b70b89b-1ab4-427c-a811-1d88c153404e
{'storyId': '5b70b89b-1ab4-427c-a811-1d88c153404e'}
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] storiesController- Retrieving homepage feed for userFriends
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting userFriends friend list
Historias:
 {'feedStories': [{'_id': '5b70b89b-1ab4-427c-a811-1d88c153404e', 'username': 'userFriends', 'storyDetail': {'description': 'Esto es un meme', 'title': None, 'state': 'Public', 'url': 'https://i.redd.it/gep59dz589a01.jpg'}, 'createdAt': '2018-06-09 18:52:44.730181', 'updatedAt': '2018-06-09 18:52:44.730188', 'reactions': {}}, {'_id': '1ed1f548-4eeb-43ff-8695-c2535a7f7709', 'username': 'user', 'storyDetail': {'description': 'Nueva descripcion', 'title': None, 'state': 'Public', 'url': 'https://img.buzzfeed.com/buzzfeed-static/static/2016-11/9/10/asset/buzzfeed-prod-fastlane03/sub-buzz-6237-1478707084-5.jpg?downsize=715:*&output-format=auto&output-quality=auto'}, 'createdAt': '2018-06-09 18:52:44.606359', 'updatedAt': '2018-06-09 18:52:44.716613', 'reactions': {}}]}
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Retrieving homepage feed for user
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting user friend list


Historia ID:  1ed1f548-4eeb-43ff-8695-c2535a7f7709
[DEBUG] users-Checking user login
[DEBUG] storiesController- Deleting story 1ed1f548-4eeb-43ff-8695-c2535a7f7709
[DEBUG] stories- Deleting story 1ed1f548-4eeb-43ff-8695-c2535a7f7709
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] storiesController- Retrieving homepage feed for user
[DEBUG] stories- Retrieving last 10stories
[DEBUG] friends- Getting user friend list


Historia ID:  5b70b89b-1ab4-427c-a811-1d88c153404e
[DEBUG] users-Checking userFriends login
[DEBUG] storiesController- Deleting story 5b70b89b-1ab4-427c-a811-1d88c153404e
[DEBUG] stories- Deleting story 5b70b89b-1ab4-427c-a811-1d88c153404e
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- user adding new flash story
[DEBUG] Adding new story for user user
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- getting user homepage feed
[DEBUG] Getting last stories for user
[DEBUG] friends- Getting user friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.802593
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] flashStoriesController- getting userFriends homepage feed
[DEBUG] Getting last stories for userFriends
[DEBUG] friends- Getting userFriends friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.812519
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- getting user homepage feed
[DEBUG] Getting last stories for user
[DEBUG] friends- Getting user friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.819923
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- user updating flash story7a644699-aeb6-4662-a4c3-887fcf4eb0d3
[DEBUG] Updating story 7a644699-aeb6-4662-a4c3-887fcf4eb0d3 from user user
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- getting user homepage feed
[DEBUG] Getting last stories for user
[DEBUG] friends- Getting user friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.832974
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] flashStoriesController- userFriends adding new flash story
[DEBUG] Adding new story for user userFriends
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] flashStoriesController- getting userFriends homepage feed
[DEBUG] Getting last stories for userFriends
[DEBUG] friends- Getting userFriends friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.869796
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- getting user homepage feed
[DEBUG] Getting last stories for user
[DEBUG] friends- Getting user friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.881227
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- removing story 7a644699-aeb6-4662-a4c3-887fcf4eb0d3
[DEBUG] Deleting story 7a644699-aeb6-4662-a4c3-887fcf4eb0d3
[DEBUG] usersLoginController- Validating login for user userFriends
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user userFriends
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: userFriends, token: eTKhUrPGek
[DEBUG] users-Checking userFriends login
[DEBUG] flashStoriesController- getting user homepage feed
[DEBUG] Getting last stories for user
[DEBUG] friends- Getting user friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:43.895708
[DEBUG] users-Checking userFriends login
[DEBUG] flashStoriesController- removing story e5a3848c-4927-4c16-82ff-49eb5aef948d
[DEBUG] Deleting story e5a3848c-4927-4c16-82ff-49eb5aef948d
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- user adding new flash story
[DEBUG] Adding new story for user user
[DEBUG] users-Checking user login
[DEBUG] flashStoriesController- getting user homepage feed
[DEBUG] Getting last stories for user
[DEBUG] friends- Getting user friend list
[INFO] Deleting garbage
deleeeeete:  2018-06-09 18:52:44.938521
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story 7490154e-5e84-4437-8650-8dafa816a2a6
[DEBUG] users-Checking user login
[DEBUG] commentsController- Adding new comment from user to story 7490154e-5e84-4437-8650-8dafa816a2a6
[DEBUG] comments-user adding comment: Ese meme si se puede ver to story 7490154e-5e84-4437-8650-8dafa816a2a6
[INFO] comments- comment:{'_id': '2bc19cd6-3213-41c8-8f8b-ac6429d0cabb', 'user': 'user', 'date': '2018-06-09 18:52:46.041831', 'message': 'Ese meme si se puede ver'}
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story b4e22a2c-a032-4e05-9ac5-2b09128feb19
[DEBUG] users-Checking user login
[DEBUG] commentsController- Adding new comment from user to story b4e22a2c-a032-4e05-9ac5-2b09128feb19
[DEBUG] comments-user adding comment: Ese meme si se puede ver to story b4e22a2c-a032-4e05-9ac5-2b09128feb19
[INFO] comments- comment:{'_id': '19a84a04-4798-4f45-9238-b0fc683838e3', 'user': 'user', 'date': '2018-06-09 18:52:46.164319', 'message': 'Ese meme si se puede ver'}
[DEBUG] users-Checking user login
[DEBUG] commentsController- Getting story comments from story b4e22a2c-a032-4e05-9ac5-2b09128feb19
[DEBUG] comments-Getting comments from story b4e22a2c-a032-4e05-9ac5-2b09128feb19
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story 0f86399c-679b-4ccd-9370-b18d127d6c31
[DEBUG] users-Checking user login
[DEBUG] commentsController- Adding new comment from user to story 0f86399c-679b-4ccd-9370-b18d127d6c31
[DEBUG] comments-user adding comment: Ese meme si se puede ver to story 0f86399c-679b-4ccd-9370-b18d127d6c31
[INFO] comments- comment:{'_id': '7bb6baac-1419-451f-a9ad-7d60c694bd8f', 'user': 'user', 'date': '2018-06-09 18:52:46.200943', 'message': 'Ese meme si se puede ver'}
[DEBUG] users-Checking user login
[DEBUG] commentsController- Adding new comment from user to story 0f86399c-679b-4ccd-9370-b18d127d6c31
[DEBUG] comments-user adding comment: Buzzfeed es muy normie to story 0f86399c-679b-4ccd-9370-b18d127d6c31
[INFO] comments- comment:{'_id': 'a7bba894-9149-4be1-959c-c43f844917f2', 'user': 'user', 'date': '2018-06-09 18:52:46.207967', 'message': 'Buzzfeed es muy normie'}
[DEBUG] users-Checking user login
[DEBUG] commentsController- Getting story comments from story 0f86399c-679b-4ccd-9370-b18d127d6c31
[DEBUG] comments-Getting comments from story 0f86399c-679b-4ccd-9370-b18d127d6c31
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story c3ec7913-1f28-434c-b932-046d9846a49d
[DEBUG] users-Checking user login
[DEBUG] commentsController- Adding new comment from user to story c3ec7913-1f28-434c-b932-046d9846a49d
[DEBUG] comments-user adding comment: Ese meme si se puede ver to story c3ec7913-1f28-434c-b932-046d9846a49d
[INFO] comments- comment:{'_id': 'cde2ff70-97fb-481d-9eea-b07c890e36f9', 'user': 'user', 'date': '2018-06-09 18:52:46.233392', 'message': 'Ese meme si se puede ver'}
{'id': 'cde2ff70-97fb-481d-9eea-b07c890e36f9'}
[DEBUG] users-Checking user login
[DEBUG] commentsController- Removing comment cde2ff70-97fb-481d-9eea-b07c890e36f9 from story c3ec7913-1f28-434c-b932-046d9846a49d
[DEBUG] comments- Removing comment cde2ff70-97fb-481d-9eea-b07c890e36f9 from story c3ec7913-1f28-434c-b932-046d9846a49d
[DEBUG] users-Checking user login
[DEBUG] commentsController- Getting story comments from story c3ec7913-1f28-434c-b932-046d9846a49d
[DEBUG] comments-Getting comments from story c3ec7913-1f28-434c-b932-046d9846a49d
[]
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story af52dc1e-aec4-48fb-81f6-5af120e10c55
[DEBUG] users-Checking user login
[DEBUG] reactionsController- user is adding a reaction to story af52dc1e-aec4-48fb-81f6-5af120e10c55
[DEBUG] stories- Adding reaction to story
Okey
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story af5553de-5df8-429e-b174-1cacaa24cc77
[DEBUG] users-Checking user login
[DEBUG] reactionsController- user is adding a reaction to story af5553de-5df8-429e-b174-1cacaa24cc77
[DEBUG] stories- Adding reaction to story
[DEBUG] users-Checking user login
[DEBUG] reactionsController- user2 is adding a reaction to story af5553de-5df8-429e-b174-1cacaa24cc77
[DEBUG] stories- Adding reaction to story
[DEBUG] users-Checking user login
[DEBUG] reactionsController- Getting story af5553de-5df8-429e-b174-1cacaa24cc77 reactions
[DEBUG] stories- Getting reactions for story: af5553de-5df8-429e-b174-1cacaa24cc77
[{'reacter': 'user', 'reaction': 'me gusta'}, {'reacter': 'user2', 'reaction': 'me aburre'}]
[DEBUG] usersLoginController- Validating login for user user
[INFO] User login mockup
[INFO] Mocking succesful login
[DEBUG] usersLoginController- LoginController - response status:200
[DEBUG] usersLoginController- Succesful login for user user
[INFO] Mocking user registry
[DEBUG] loginnedUsers- User login: user, token: eTKhUrPGek
[DEBUG] users-Checking user login
[DEBUG] storiesController- Adding story for user user
[DEBUG] stories- Adding new story for user user
[DEBUG] comments- Adding comment to story 211efb3d-3b5e-4a91-9699-e6e6cae10c93
[DEBUG] users-Checking user login
[DEBUG] reactionsController- user is adding a reaction to story 211efb3d-3b5e-4a91-9699-e6e6cae10c93
[DEBUG] stories- Adding reaction to story
[DEBUG] users-Checking user login
[DEBUG] reactionsController- user is removing his reaction to story 211efb3d-3b5e-4a91-9699-e6e6cae10c93
[DEBUG] stories- Deleting reaction from user for story: 211efb3d-3b5e-4a91-9699-e6e6cae10c93
[DEBUG] users-Checking user login
[DEBUG] reactionsController- Getting story 211efb3d-3b5e-4a91-9699-e6e6cae10c93 reactions
[DEBUG] stories- Getting reactions for story: 211efb3d-3b5e-4a91-9699-e6e6cae10c93
[]
